JwtHeadersAuthFilterPanel.short=JWT Headers
JwtHeadersAuthFilterPanel.title=HTTP JWT Request Header Authentication
JwtHeadersAuthFilterPanel.description=Authenticates by checking existence of a JWT HTTP request header

org.geoserver.security.jwtheaders.filter.GeoServerJwtHeadersFilter.name=HTTP JWT Header
org.geoserver.security.jwtheaders.filter.GeoServerJwtHeadersFilter.title=HTTP request JWT header authentication
JwtHeadersAuthFilterPanel.userNameHeaderAttributeName=Request header attribute for User Name
JwtHeadersAuthFilterPanel.UsernameHeader=User Name Extraction From Header
JwtHeadersAuthFilterPanel.UsernameHelp.title=User Name Extraction from HTTP Headers
JwtHeadersAuthFilterPanel.UsernameHelp=\
Where to extract the User Name from the HTTP request.
RoleSource.JWT=Header Containing JWT
RoleSource.JSON=Header Containing JSON String
JwtHeadersAuthFilterPanel.jsonPath=JSON Path (i.e. property1.property2)
JwtHeadersAuthFilterPanel.rolesHeaderName=Request Header attribute for Roles
UserNameHeaderFormat.STRING=Simple String
UserNameHeaderFormat.JSON=JSON
UserNameHeaderFormat.JWT=JWT
JwtHeadersAuthFilterPanel.formatUserName=Format the Header value is in
JwtHeadersAuthFilterPanel.userNamePath=JSON path for the User Name
JwtHeadersAuthFilterPanel.roleConverterTitle=Role Converter Map from External Roles to Geoserver Roles
JwtHeadersAuthFilterPanel.roleConverterHint=eg. ExternalRole1=GeoServerRole1;ExternalRole2=GeoServerRole2
JwtHeadersAuthFilterPanel.externalRoleTitle=External Role Name
JwtHeadersAuthFilterPanel.gsRoleTitle=GeoServer Role Name
JwtHeadersAuthFilterPanel.roleConverterTableTitle=Role Conversion Summary
JwtHeadersAuthFilterPanel.roleConverterOnlyListedExternalRoles=Only allow External Roles that are explicitly named above
JwtHeadersAuthFilterPanel.showTokenValidation=Validate JWT (Access Token)
JwtHeadersAuthFilterPanel.validateTokenSignatureText=Validate JWT (Access Token) Signature
JwtHeadersAuthFilterPanel.validateTokenSignatureURL=JSON Web Key Set URL (jwks_uri)
JwtHeadersAuthFilterPanel.validateTokenAgainstURL=Validate JWT (Access Token) Against Endpoint 
JwtHeadersAuthFilterPanel.validateTokenAgainstURLText=URL (userinfo_endpoint)
JwtHeadersAuthFilterPanel.validateTokenAgainstURLSubject=Also validate Subject
JwtHeadersAuthFilterPanel.validateTokenAudience=Validate JWT (Access Token) Audience 
JwtHeadersAuthFilterPanel.validateTokenAudienceClaimName=Claim Name (usually 'aud', 'azp', or 'appid')
JwtHeadersAuthFilterPanel.validateTokenAudienceClaimValue=Required Claim Value
JwtHeadersAuthFilterPanel.validateTokenHeader=Header Attached JWT Validation
JwtHeadersAuthFilterPanel.validateTokenExpiry=Validate Token Expiry
JwtHeadersAuthFilterPanel.validateTokenHelp= \
Options for validating a JWT Token.\
Typically only required for Access Token validation (Bearer Tokens).
JwtHeadersAuthFilterPanel.validateTokenHelp.title=JWT Validation Options


